{"ast":null,"code":"import _slicedToArray from \"/Users/saivarma/Documents/react/visualizer/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/saivarma/Documents/react/visualizer/src/App.js\";\nimport logo from \"./logo.svg\";\nimport React, { Component, Fragment, useState, useEffect } from \"react\";\nimport { array } from \"prop-types\";\nimport Button from \"@material-ui/core/Button\";\nimport Slider from \"@material-ui/core/Slider\";\nimport Grid from \"@material-ui/core/Grid\";\nimport ResetButton from \"./components/resetbutton\";\nimport Bar from \"./components/bar\";\n\nfunction App() {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        arr = _useState2[0],\n        setArr = _useState2[1];\n\n  const _useState3 = useState(10),\n        _useState4 = _slicedToArray(_useState3, 2),\n        arraysize = _useState4[0],\n        setArraysize = _useState4[1];\n\n  const _useState5 = useState(200),\n        _useState6 = _slicedToArray(_useState5, 2),\n        animationspeed = _useState6[0],\n        setAnimationspeed = _useState6[1];\n\n  useEffect(() => {\n    resetArray(); //  setArr(array1)\n  }, []);\n\n  const setarraysize = size => {\n    setArraysize(size);\n    setAnimationspeed(2500 / size);\n    resetArray();\n  };\n\n  const resetArray = () => {\n    var array = [];\n\n    function randomNumber(min, max) {\n      return Math.floor(Math.random() * (max - min) + min);\n    }\n\n    for (var i = 0; i < arraysize; i++) {\n      array.push(randomNumber(10, 200));\n    }\n\n    setArr(array);\n  };\n\n  const bubbleSort = array => {\n    var bubbleswap = [];\n\n    for (var i = 0; i < array.length; i++) {\n      for (var j = 0; j < array.length - i - 1; j++) {\n        if (array[j] > array[j + 1]) {\n          var temp = array[j];\n          array[j] = array[j + 1];\n          array[j + 1] = temp;\n          bubbleswap.push([j, j + 1, 0]);\n          bubbleswap.push([j, j + 1, 1]);\n        }\n      }\n\n      bubbleswap.push([array.length - i - 1]);\n    }\n\n    for (var k = 0; k < bubbleswap.length; k++) {\n      let l = k;\n      setTimeout(function () {\n        const bars = document.getElementsByClassName(\"bars\");\n\n        if (bubbleswap[l].length === 1) {\n          bars[bubbleswap[l][0]].style.backgroundColor = \"green\";\n        } else {\n          if (bubbleswap[l][2] === 0) {\n            bars[bubbleswap[l][0]].style.backgroundColor = \"red\";\n            bars[bubbleswap[l][1]].style.backgroundColor = \"red\";\n            var temp = bars[bubbleswap[l][0]].textContent;\n            bars[bubbleswap[l][0]].textContent = bars[bubbleswap[l][1]].textContent;\n            bars[bubbleswap[l][1]].textContent = temp;\n            var tempheight = bars[bubbleswap[l][0]].style.height;\n            bars[bubbleswap[l][0]].style.height = bars[bubbleswap[l][1]].style.height;\n            bars[bubbleswap[l][1]].style.height = tempheight;\n          } else {\n            bars[bubbleswap[l][0]].style.backgroundColor = \"aqua\";\n            bars[bubbleswap[l][1]].style.backgroundColor = \"aqua\";\n          }\n        }\n      }, animationspeed * k);\n    }\n\n    console.log(bubbleswap);\n    setArr(array);\n    console.log(arr);\n  };\n\n  const selectionSort = array => {\n    var selectionswap = [];\n\n    for (var i = 0; i < array.length; i++) {\n      //set min to the current iteration of i\n      var min = i;\n      selectionswap.push([i, \"start\", 0]);\n\n      for (var j = i + 1; j < array.length; j++) {\n        selectionswap.push([j, 0]);\n        selectionswap.push([j, 1]);\n\n        if (array[j] < array[min]) {\n          min = j;\n        }\n      }\n\n      var temp = array[i];\n      array[i] = array[min];\n      array[min] = temp;\n      selectionswap.push([i, \"end\", 0]);\n      selectionswap.push([i, min, \"swap\"]);\n      selectionswap.push([i]);\n    }\n\n    console.log(array);\n\n    for (var k = 0; k < selectionswap.length; k++) {\n      let l = k;\n      setTimeout(function () {\n        const bars = document.getElementsByClassName(\"bars\");\n\n        if (selectionswap[l].length === 3) {\n          if (selectionswap[l][1] === \"start\") {\n            bars[selectionswap[l][0]].style.backgroundColor = \"red\";\n          } else if (selectionswap[l][2] === \"swap\") {\n            var temp = bars[selectionswap[l][0]].textContent;\n            bars[selectionswap[l][0]].textContent = bars[selectionswap[l][1]].textContent;\n            bars[selectionswap[l][1]].textContent = temp;\n            var tempheight = bars[selectionswap[l][0]].style.height;\n            bars[selectionswap[l][0]].style.height = bars[selectionswap[l][1]].style.height;\n            bars[selectionswap[l][1]].style.height = tempheight;\n          } else {\n            bars[selectionswap[l][0]].style.backgroundColor = \"aqua\";\n          }\n        } else if (selectionswap[l].length === 2) {\n          if (selectionswap[l][1] === 0) {\n            bars[selectionswap[l][0]].style.backgroundColor = \"red\";\n          } else {\n            bars[selectionswap[l][0]].style.backgroundColor = \"aqua\";\n          }\n        } else {\n          bars[selectionswap[l][0]].style.backgroundColor = \"green\";\n        }\n      }, animationspeed * k);\n    }\n\n    console.log(selectionswap);\n    setArr(array);\n    console.log(arr);\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, React.createElement(ResetButton, {\n    arr: arr,\n    resetArray: resetArray,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }), React.createElement(Bar, {\n    arr: arr,\n    bubbleSort: bubbleSort,\n    setarraysize: setarraysize,\n    arraysize: arraysize,\n    selectionSort: selectionSort,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/saivarma/Documents/react/visualizer/src/App.js"],"names":["React","Component","Fragment","useState","useEffect","array","Button","Slider","Grid","ResetButton","Bar","App","arr","setArr","arraysize","setArraysize","animationspeed","setAnimationspeed","resetArray","setarraysize","size","randomNumber","min","max","Math","floor","random","i","push","bubbleSort","bubbleswap","length","j","temp","k","l","setTimeout","bars","document","getElementsByClassName","style","backgroundColor","textContent","tempheight","height","console","log","selectionSort","selectionswap"],"mappings":"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","sourcesContent":["import logo from \"./logo.svg\";\nimport React, { Component, Fragment, useState, useEffect } from \"react\";\nimport { array } from \"prop-types\";\nimport Button from \"@material-ui/core/Button\";\nimport Slider from \"@material-ui/core/Slider\";\nimport Grid from \"@material-ui/core/Grid\";\nimport ResetButton from \"./components/resetbutton\";\nimport Bar from \"./components/bar\";\n\nfunction App() {\n  const [arr, setArr] = useState([]);\n  const [arraysize, setArraysize] = useState(10);\n  const [animationspeed, setAnimationspeed] = useState(200);\n  useEffect(() => {\n    resetArray();\n    //  setArr(array1)\n  }, []);\n  const setarraysize = size => {\n    setArraysize(size);\n    setAnimationspeed(2500 / size);\n    resetArray();\n  };\n  const resetArray = () => {\n    var array = [];\n\n    function randomNumber(min, max) {\n      return Math.floor(Math.random() * (max - min) + min);\n    }\n    for (var i = 0; i < arraysize; i++) {\n      array.push(randomNumber(10, 200));\n    }\n\n    setArr(array);\n  };\n\n  const bubbleSort = array => {\n    var bubbleswap = [];\n    for (var i = 0; i < array.length; i++) {\n      for (var j = 0; j < array.length - i - 1; j++) {\n        if (array[j] > array[j + 1]) {\n          var temp = array[j];\n          array[j] = array[j + 1];\n          array[j + 1] = temp;\n          bubbleswap.push([j, j + 1, 0]);\n          bubbleswap.push([j, j + 1, 1]);\n        }\n      }\n      bubbleswap.push([array.length - i - 1]);\n    }\n    for (var k = 0; k < bubbleswap.length; k++) {\n      let l = k;\n      setTimeout(function() {\n        const bars = document.getElementsByClassName(\"bars\");\n        if (bubbleswap[l].length === 1) {\n          bars[bubbleswap[l][0]].style.backgroundColor = \"green\";\n        } else {\n          if (bubbleswap[l][2] === 0) {\n            bars[bubbleswap[l][0]].style.backgroundColor = \"red\";\n            bars[bubbleswap[l][1]].style.backgroundColor = \"red\";\n            var temp = bars[bubbleswap[l][0]].textContent;\n            bars[bubbleswap[l][0]].textContent =\n              bars[bubbleswap[l][1]].textContent;\n            bars[bubbleswap[l][1]].textContent = temp;\n            var tempheight = bars[bubbleswap[l][0]].style.height;\n            bars[bubbleswap[l][0]].style.height =\n              bars[bubbleswap[l][1]].style.height;\n            bars[bubbleswap[l][1]].style.height = tempheight;\n          } else {\n            bars[bubbleswap[l][0]].style.backgroundColor = \"aqua\";\n            bars[bubbleswap[l][1]].style.backgroundColor = \"aqua\";\n          }\n        }\n      }, animationspeed * k);\n    }\n    console.log(bubbleswap);\n\n    setArr(array);\n    console.log(arr);\n  };\n  const selectionSort = array => {\n    var selectionswap = [];\n    for (var i = 0; i < array.length; i++) {\n      //set min to the current iteration of i\n      var min = i;\n      selectionswap.push([i, \"start\", 0]);\n      for (var j = i + 1; j < array.length; j++) {\n        selectionswap.push([j, 0]);\n        selectionswap.push([j, 1]);\n        if (array[j] < array[min]) {\n          min = j;\n        }\n      }\n      var temp = array[i];\n      array[i] = array[min];\n      array[min] = temp;\n      selectionswap.push([i, \"end\", 0]);\n      selectionswap.push([i, min, \"swap\"]);\n      selectionswap.push([i]);\n    }\n    console.log(array);\n\n    for (var k = 0; k < selectionswap.length; k++) {\n      let l = k;\n      setTimeout(function() {\n        const bars = document.getElementsByClassName(\"bars\");\n        if (selectionswap[l].length === 3) {\n          if (selectionswap[l][1] === \"start\") {\n            bars[selectionswap[l][0]].style.backgroundColor = \"red\";\n          } else if (selectionswap[l][2] === \"swap\") {\n            var temp = bars[selectionswap[l][0]].textContent;\n            bars[selectionswap[l][0]].textContent =\n              bars[selectionswap[l][1]].textContent;\n            bars[selectionswap[l][1]].textContent = temp;\n            var tempheight = bars[selectionswap[l][0]].style.height;\n            bars[selectionswap[l][0]].style.height =\n              bars[selectionswap[l][1]].style.height;\n            bars[selectionswap[l][1]].style.height = tempheight;\n          } else {\n            bars[selectionswap[l][0]].style.backgroundColor = \"aqua\";\n          }\n        } else if (selectionswap[l].length === 2) {\n          if (selectionswap[l][1] === 0) {\n            bars[selectionswap[l][0]].style.backgroundColor = \"red\";\n          } else {\n            bars[selectionswap[l][0]].style.backgroundColor = \"aqua\";\n          }\n        } else {\n          bars[selectionswap[l][0]].style.backgroundColor = \"green\";\n        }\n      }, animationspeed * k);\n    }\n    console.log(selectionswap);\n\n    setArr(array);\n    console.log(arr);\n  };\n\n  return (\n    <div>\n      <ResetButton arr={arr} resetArray={resetArray}></ResetButton>\n      <Bar\n        arr={arr}\n        bubbleSort={bubbleSort}\n        setarraysize={setarraysize}\n        arraysize={arraysize}\n        selectionSort={selectionSort}\n      ></Bar>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}